/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _FILESYSTEM_H_RPCGEN
#define _FILESYSTEM_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif

#define BUFFER_SIZE 255
#define FILE_NAME_SIZE 100

struct response {
	u_char bytesReaded[BUFFER_SIZE];
	int totalBytes;
};
typedef struct response response;

struct readHeaders {
	char *fileName;
	int position;
	int totalBytes;
};
typedef struct readHeaders readHeaders;

struct writeHeaders {
	char *fileName;
	u_char buffer[BUFFER_SIZE];
	int totalBytes;
};
typedef struct writeHeaders writeHeaders;

#define filesystem_prg 0x20000001
#define filesystem_ver 1

#if defined(__STDC__) || defined(__cplusplus)
#define readFile 1
extern  struct response * readfile_1(struct readHeaders *, CLIENT *);
extern  struct response * readfile_1_svc(struct readHeaders *, struct svc_req *);
#define writeFile 2
extern  int * writefile_1(struct writeHeaders *, CLIENT *);
extern  int * writefile_1_svc(struct writeHeaders *, struct svc_req *);
extern int filesystem_prg_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define readFile 1
extern  struct response * readfile_1();
extern  struct response * readfile_1_svc();
#define writeFile 2
extern  int * writefile_1();
extern  int * writefile_1_svc();
extern int filesystem_prg_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_response (XDR *, response*);
extern  bool_t xdr_readHeaders (XDR *, readHeaders*);
extern  bool_t xdr_writeHeaders (XDR *, writeHeaders*);

#else /* K&R C */
extern bool_t xdr_response ();
extern bool_t xdr_readHeaders ();
extern bool_t xdr_writeHeaders ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_FILESYSTEM_H_RPCGEN */
